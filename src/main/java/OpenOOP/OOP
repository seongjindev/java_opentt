객체지향 프로그래밍(Object Oriented Programming)

좀 더 나은 프로그램을 만들기 위한 프로그래밍 패러다임으로 로직을 상태(state)와 행위(behave)로 이루어진 객체로 만드는 것이다.

문법과 설계

문법
객체지향을 편하게 할 수 있도록 언어가 제공하는 기능을 익히는 것

설계
지하철 노선 - 추상화
지하철 노선도가 디자인의 추상화라고 한다면 프로그램을 만든다는 것은 소프트웨어의 추상화라고 할 수 있다.
객체 지향 프로그래밍은 좀 더 현실을 잘 반영하기 위한 노력의 산물이다.
이것은 단순히 객체 지향의 문법을 이용해서 객체를 만든다고 달성되는 것이 아니다.
고도의 추상화 능력이 필요하다.
좋은 설계는 문법을 배우는 것보다 훨씬 어려운 일이다.

부품화
객체 지향과 부품화를 동일시 할 수는 없지만 부품화라고 하는 소프트웨어의 큰 흐름은 객체 지향이 만들어지는데 지대한 공헌을 했다고 할 수 있다.

은닉화 캡슐화
내부의 동작 방법을 단단한 케이스 안(객체)으로 숨기고 사용자에게는 그 부품을 사용방법만을 노출하고 있는 것이다

인터페이스
잘 만들어진 부품이라면 부품과 부품을 서로 교환 할 수 있어야 한다.
각각의 부품은 미리 정해진 약속에 따라서 신호를 입, 출력하고, 연결점의 모양을 표준에 맞게 만들면 된다. 이러한 연결점을 인터페이스라고 한다.
